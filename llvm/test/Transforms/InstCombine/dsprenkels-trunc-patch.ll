; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -instcombine -S | FileCheck %s
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"

; define <8 x i32> @PR_dsprenkels_tbd_ins(<4 x i64> %x) {
;   %e = extractelement <4 x i64> %x, i32 0
;   %t = trunc i64 %e to i32
;   %i = insertelement <8 x i32> undef, i32 %t, i32 0
;   ret <8 x i32> %i
; }

define i32 @PR_dsprenkels_tbd_1(<4 x i64> %x) {
; CHECK-LABEL: @PR_dsprenkels_tbd_1(
; CHECK-NEXT:    [[BITCAST:%.*]] = bitcast <4 x i64> [[X:%.*]] to <8 x i32>
; CHECK-NEXT:    [[TRUNC:%.*]] = extractelement <8 x i32> [[BITCAST]], i32 0
; CHECK-NEXT:    ret i32 [[TRUNC]]
;
  %e = extractelement <4 x i64> %x, i32 0
  %t = trunc i64 %e to i32
  ret i32 %t
}

define i32 @PR_dsprenkels_tbd_2(<4 x i64> %x) {
; CHECK-LABEL: @PR_dsprenkels_tbd_2(
; CHECK-NEXT:    [[E:%.*]] = extractelement <4 x i64> [[X:%.*]], i32 1
; CHECK-NEXT:    [[T:%.*]] = trunc i64 [[E]] to i32
; CHECK-NEXT:    ret i32 [[T]]
;
  %e = extractelement <4 x i64> %x, i32 1
  %t = trunc i64 %e to i32
  ret i32 %t
}


